{
	"info": {
		"_postman_id": "c142335a-f053-4003-8cb7-cab428b9afbe",
		"name": "TechnicalTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49257593",
		"_collection_link": "https://arnaud-daver-9954662.postman.co/workspace/A-Daver's-Workspace~97dcfac6-1e90-4597-865c-3982d4bde337/collection/49257593-c142335a-f053-4003-8cb7-cab428b9afbe?action=share&source=collection_link&creator=49257593"
	},
	"item": [
		{
			"name": "UserNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UserNotFound\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/user/999",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"999"
					]
				}
			},
			"response": [
				{
					"name": "UserNotFound",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8888/user/999",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8888",
							"path": [
								"user",
								"999"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": [
						{
							"key": "Content-Length",
							"value": "0"
						},
						{
							"key": "Date",
							"value": "Tue, 14 Oct 2025 14:13:25 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "AllUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users\", function () {",
							"    pm.response.to.have.status(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json[0].id).to.eql(1);",
							"    pm.expect(json[0].name).to.eql(\"Arnaud\");",
							"    pm.expect(json[0].birthDate).to.eql(\"1975-01-01\");",
							"    pm.expect(json[0].countryCode).to.eql(\"FR\");",
							"    pm.expect(json[0].phoneNumber).to.eql(\"+337777777\");",
							"    pm.expect(json[0].gender).to.eql(\"M\");",
							"    pm.expect(json[1].id).to.eql(2);",
							"    pm.expect(json[1].name).to.eql(\"Maria\");",
							"    pm.expect(json[1].birthDate).to.eql(\"2016-10-10\");",
							"    pm.expect(json[1].countryCode).to.eql(\"DE\");",
							"    pm.expect(json[1].phoneNumber).to.eql(\"+336666666\");",
							"    pm.expect(json[1].gender).to.eql(\"F\");",
							"    // id3 for update test",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "AllUsers",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Wed, 15 Oct 2025 09:30:32 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Arnaud\",\n        \"birthDate\": \"1975-01-01\",\n        \"countryCode\": \"FR\",\n        \"phoneNumber\": \"+337777777\",\n        \"gender\": \"M\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Maria\",\n        \"birthDate\": \"2016-10-10\",\n        \"countryCode\": \"DE\",\n        \"phoneNumber\": \"+336666666\",\n        \"gender\": \"F\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Victoria\",\n        \"birthDate\": \"2010-02-11\",\n        \"countryCode\": \"US\",\n        \"phoneNumber\": \"+3311111111\",\n        \"gender\": \"F\"\n    }\n]"
				}
			]
		},
		{
			"name": "NullPost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().countryCode).to.match(/nul|invalid/);",
							"    pm.expect(pm.response.json().name).to.contains(\"nul\");",
							"    pm.expect(pm.response.json().birthDate).to.equal(\"age must be between 18 and 120 years\");",
							"})"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().birthDate).to.equal(\"age must be between 18 and 120 years\");",
							"})"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Arnaud\",\n    \"birthDate\": \"2024-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "InvalidCountry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().countryCode).to.contains(\"invalid country code\");",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Arnaud\",\n    \"birthDate\": \"1924-01-01\",\n    \"countryCode\": \"US\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "InvalidGender",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().gender).to.contains(\"F or M only\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Arnaud\",\n    \"birthDate\": \"1924-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"N\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "InvalidPhoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().phoneNumber).to.include(\"invalid phone number format\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Arnaud\",\n    \"birthDate\": \"1924-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"abcd\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "InvalidName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([422]);",
							"    pm.expect(pm.response.json().name).to.include(\"has to contain between\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"name\": \"Arn@ud\",\n    \"birthDate\": \"1924-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/user",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user"
					]
				}
			},
			"response": [
				{
					"name": "InvalidName",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"name\": \"Arn@ud\",\n    \"birthDate\": \"1924-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8888/user",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8888",
							"path": [
								"user"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": null,
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Tue, 14 Oct 2025 14:00:00 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"has to contain between 2 and 40 alphabetic characters\"\n}"
				}
			]
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"    const json = pm.response.json();",
							"    pm.expect(json.id).to.greaterThan(3);",
							"    pm.expect(json.name).to.eql(\"Stephane\");",
							"    pm.expect(json.birthDate).to.eql(\"1985-01-01\");",
							"    pm.expect(json.countryCode).to.eql(\"FR\");",
							"    pm.expect(json.phoneNumber).to.eql(\"+337777777\");",
							"    pm.expect(json.gender).to.eql(\"M\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Stephane\",\n    \"birthDate\": \"1985-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpadateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"    const json = pm.response.json();",
							"    pm.expect(json.id).to.eql(3);",
							"    pm.expect(json.name).to.eql(\"Stephane\");",
							"    pm.expect(json.birthDate).to.eql(\"1985-01-01\");",
							"    pm.expect(json.countryCode).to.eql(\"FR\");",
							"    pm.expect(json.phoneNumber).to.eql(\"+3311111111\");",
							"    pm.expect(json.gender).to.eql(\"M\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 3,\n    \"name\": \"Stephane\",\n    \"birthDate\": \"1985-01-01\",\n    \"countryCode\": \"FR\",\n    \"phoneNumber\": \"+337777777\",\n    \"gender\": \"M\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/3",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "User1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User1\", function () {",
							"    pm.response.to.have.status(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json.id).to.eql(1);",
							"    pm.expect(json.name).to.eql(\"Arnaud\");",
							"    pm.expect(json.birthDate).to.eql(\"1975-01-01\");",
							"    pm.expect(json.countryCode).to.eql(\"FR\");",
							"    pm.expect(json.phoneNumber).to.eql(\"+337777777\");",
							"    pm.expect(json.gender).to.eql(\"M\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/user/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "",
			"type": "default"
		}
	]
}